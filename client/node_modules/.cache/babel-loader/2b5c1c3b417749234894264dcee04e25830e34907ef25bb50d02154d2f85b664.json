{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vidu\\\\OneDrive\\\\Desktop\\\\Xenon Innovation\\\\Main\\\\Expenser\\\\client\\\\src\\\\components\\\\EditCase\\\\EditCase.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, doc, updateDoc, getDocs, getDoc } from \"firebase/firestore\";\nimport \"../../pages/assets/styles/RevenueTracker.css\";\nimport { db } from \"../../config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditCase({\n  closeModal,\n  caseId,\n  refreshCases\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    caseName: \"\",\n    caseType: \"\",\n    jurisdiction: \"\",\n    caseDesc: \"\",\n    caseNotes: \"\",\n    leadAttorney: \"\",\n    supportingAttornies: {\n      attorneyName: \"\",\n      attorneyContact: \"\"\n    },\n    witnesses: {\n      witnessName: \"\",\n      witnessContact: \"\"\n    }\n  });\n  const [errors, setErrors] = useState({\n    caseName: \"\",\n    caseType: \"\",\n    jurisdiction: \"\",\n    leadAttorney: \"\"\n  });\n  const [caseTypes, setCaseTypes] = useState([]);\n  useEffect(() => {\n    const loadCase = async () => {\n      try {\n        const caseRef = doc(db, \"cases\", caseId);\n        const caseSnapshot = await getDoc(caseRef);\n        if (caseSnapshot.exists()) {\n          var _data$supportingAttor, _data$supportingAttor2, _data$witnesses, _data$witnesses2;\n          const data = caseSnapshot.data();\n          setFormData({\n            caseName: data.name,\n            caseType: data.type,\n            jurisdiction: data.jurisdiction,\n            caseDesc: data.case_desc,\n            caseNotes: data.notes,\n            leadAttorney: data.lead_attorney,\n            courtNumber: data.court_assigned_case_number,\n            supportingAttornies: {\n              attorneyName: ((_data$supportingAttor = data.supportingAttornies) === null || _data$supportingAttor === void 0 ? void 0 : _data$supportingAttor.name) || \"\",\n              attorneyContact: ((_data$supportingAttor2 = data.supportingAttornies) === null || _data$supportingAttor2 === void 0 ? void 0 : _data$supportingAttor2.contact) || \"\"\n            },\n            witnesses: {\n              witnessName: ((_data$witnesses = data.witnesses) === null || _data$witnesses === void 0 ? void 0 : _data$witnesses.name) || \"\",\n              witnessContact: ((_data$witnesses2 = data.witnesses) === null || _data$witnesses2 === void 0 ? void 0 : _data$witnesses2.contact) || \"\"\n            }\n          });\n        } else {\n          console.error(\"No such case found!\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching case: \", error);\n      }\n    };\n    loadCase();\n  }, [caseId]);\n  useEffect(() => {\n    const loadCaseTypes = async () => {\n      try {\n        const caseTypesRef = collection(db, \"cases-types\"); // Pass db here correctly\n        const querySnapshot = await getDocs(caseTypesRef);\n\n        // Map through documents and set categories state\n        const caseTypesList = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          name: doc.data().name || \"Unnamed Case Type\" // Default name if missing\n        }));\n        setCaseTypes(caseTypesList);\n      } catch (error) {\n        console.error(\"Error fetching case types: \", error);\n      }\n    };\n    loadCaseTypes();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const caseRef = doc(db, \"cases\", caseId);\n      // Transform formData to match the database structure\n      const updatedData = {\n        name: formData.caseName,\n        type: formData.caseType,\n        jurisdiction: formData.jurisdiction,\n        case_desc: formData.caseDesc,\n        notes: formData.caseNotes,\n        lead_attorney: formData.leadAttorney,\n        court_assigned_case_number: formData.courtNumber,\n        supportingAttornies: {\n          name: formData.supportingAttornies.attorneyName,\n          contact: formData.supportingAttornies.attorneyContact\n        },\n        witnesses: {\n          name: formData.witnesses.witnessName,\n          contact: formData.witnesses.witnessContact\n        }\n      };\n      await updateDoc(caseRef, updatedData);\n      console.log(\"Case updated successfully\");\n\n      // Close modal and refresh expenses after submission\n      closeModal();\n      refreshCases && refreshCases();\n    } catch (error) {\n      console.error(\"Error updating document: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Case Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Case name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"field\",\n              type: \"text\",\n              name: \"caseName\",\n              value: formData.caseName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), errors.caseName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.caseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Case type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"field\",\n              name: \"caseType\",\n              value: formData.caseType,\n              onChange: handleChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a case type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), caseTypes.map(caseType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: caseType.name,\n                children: caseType.name\n              }, caseType.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), errors.caseType && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.caseType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Case witnesses (if applicable):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Witness name\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"field\",\n              name: \"witnessName\",\n              type: \"text\",\n              value: formData.witnesses.witnessName,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  witnesses: {\n                    ...formData.witnesses,\n                    witnessName: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Witness contact\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"field\",\n              name: \"witnessContact\",\n              type: \"text\",\n              value: formData.witnesses.witnessContact,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  witnesses: {\n                    ...formData.witnesses,\n                    witnessContact: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Lead Attorney:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `field fields ${errors.leadAttorney ? \"error\" : \"\"}`,\n            type: \"text\",\n            name: \"leadAttorney\",\n            value: formData.leadAttorney,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), errors.leadAttorney && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.leadAttorney\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Case description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"field\",\n            name: \"caseDesc\",\n            value: formData.caseDesc,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Supporting Attorneys (if applicable):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Attorney name\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"field\",\n              name: \"attorneyName\",\n              type: \"text\",\n              value: formData.supportingAttornies.attorneyName,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  supportingAttornies: {\n                    ...formData.supportingAttornies,\n                    attorneyName: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Attorney contact\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"field\",\n              name: \"attorneyContact\",\n              type: \"text\",\n              value: formData.supportingAttornies.attorneyContact,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  supportingAttornies: {\n                    ...formData.supportingAttornies,\n                    attorneyContact: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Jurisdiction:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `field fields ${errors.jurisdiction ? \"error\" : \"\"}`,\n            type: \"text\",\n            name: \"jurisdiction\",\n            value: formData.jurisdiction,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), errors.jurisdiction && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.jurisdiction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Court assigned case number (if applicable):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"field\",\n            type: \"text\",\n            name: \"courtNumber\",\n            value: formData.courtNumber,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Case notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"field\",\n            name: \"caseNotes\",\n            value: formData.caseNotes,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"modal-button save\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-button\",\n        onClick: closeModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(EditCase, \"QfRq97feyMNjkqX1JJryR+ge244=\");\n_c = EditCase;\nexport default EditCase;\nvar _c;\n$RefreshReg$(_c, \"EditCase\");","map":{"version":3,"names":["React","useState","useEffect","collection","doc","updateDoc","getDocs","getDoc","db","jsxDEV","_jsxDEV","EditCase","closeModal","caseId","refreshCases","_s","formData","setFormData","caseName","caseType","jurisdiction","caseDesc","caseNotes","leadAttorney","supportingAttornies","attorneyName","attorneyContact","witnesses","witnessName","witnessContact","errors","setErrors","caseTypes","setCaseTypes","loadCase","caseRef","caseSnapshot","exists","_data$supportingAttor","_data$supportingAttor2","_data$witnesses","_data$witnesses2","data","name","type","case_desc","notes","lead_attorney","courtNumber","court_assigned_case_number","contact","console","error","loadCaseTypes","caseTypesRef","querySnapshot","caseTypesList","docs","map","id","handleChange","e","value","target","handleSubmit","preventDefault","updatedData","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vidu/OneDrive/Desktop/Xenon Innovation/Main/Expenser/client/src/components/EditCase/EditCase.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  updateDoc,\r\n  getDocs,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\nimport \"../../pages/assets/styles/RevenueTracker.css\";\r\nimport { db } from \"../../config.js\";\r\n\r\nfunction EditCase({ closeModal, caseId, refreshCases }) {\r\n  const [formData, setFormData] = useState({\r\n    caseName: \"\",\r\n    caseType: \"\",\r\n    jurisdiction: \"\",\r\n    caseDesc: \"\",\r\n    caseNotes: \"\",\r\n    leadAttorney: \"\",\r\n    supportingAttornies: {\r\n      attorneyName: \"\",\r\n      attorneyContact: \"\",\r\n    },\r\n    witnesses: {\r\n      witnessName: \"\",\r\n      witnessContact: \"\",\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    caseName: \"\",\r\n    caseType: \"\",\r\n    jurisdiction: \"\",\r\n    leadAttorney: \"\",\r\n  });\r\n\r\n  const [caseTypes, setCaseTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadCase = async () => {\r\n      try {\r\n        const caseRef = doc(db, \"cases\", caseId);\r\n        const caseSnapshot = await getDoc(caseRef);\r\n        if (caseSnapshot.exists()) {\r\n          const data = caseSnapshot.data();\r\n          setFormData({\r\n            caseName: data.name,\r\n            caseType: data.type,\r\n            jurisdiction: data.jurisdiction,\r\n            caseDesc: data.case_desc,\r\n            caseNotes: data.notes,\r\n            leadAttorney: data.lead_attorney,\r\n            courtNumber: data.court_assigned_case_number,\r\n            supportingAttornies: {\r\n              attorneyName: data.supportingAttornies?.name || \"\",\r\n              attorneyContact: data.supportingAttornies?.contact || \"\",\r\n            },\r\n            witnesses: {\r\n              witnessName: data.witnesses?.name || \"\",\r\n              witnessContact: data.witnesses?.contact || \"\",\r\n            },\r\n          });\r\n        } else {\r\n          console.error(\"No such case found!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching case: \", error);\r\n      }\r\n    };\r\n\r\n    loadCase();\r\n  }, [caseId]);\r\n\r\n  useEffect(() => {\r\n    const loadCaseTypes = async () => {\r\n      try {\r\n        const caseTypesRef = collection(db, \"cases-types\"); // Pass db here correctly\r\n        const querySnapshot = await getDocs(caseTypesRef);\r\n\r\n        // Map through documents and set categories state\r\n        const caseTypesList = querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name || \"Unnamed Case Type\", // Default name if missing\r\n        }));\r\n        setCaseTypes(caseTypesList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching case types: \", error);\r\n      }\r\n    };\r\n\r\n    loadCaseTypes();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const caseRef = doc(db, \"cases\", caseId);\r\n      // Transform formData to match the database structure\r\n      const updatedData = {\r\n        name: formData.caseName,\r\n        type: formData.caseType,\r\n        jurisdiction: formData.jurisdiction,\r\n        case_desc: formData.caseDesc,\r\n        notes: formData.caseNotes,\r\n        lead_attorney: formData.leadAttorney,\r\n        court_assigned_case_number: formData.courtNumber,\r\n        supportingAttornies: {\r\n          name: formData.supportingAttornies.attorneyName,\r\n          contact: formData.supportingAttornies.attorneyContact,\r\n        },\r\n        witnesses: {\r\n          name: formData.witnesses.witnessName,\r\n          contact: formData.witnesses.witnessContact,\r\n        }\r\n      };\r\n\r\n      await updateDoc(caseRef, updatedData);\r\n      console.log(\"Case updated successfully\");\r\n\r\n      // Close modal and refresh expenses after submission\r\n      closeModal();\r\n      refreshCases && refreshCases();\r\n    } catch (error) {\r\n      console.error(\"Error updating document: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>Case Information</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-section-content\">\r\n            <label className=\"label\">\r\n              Case name:\r\n              <input\r\n                className=\"field\"\r\n                type=\"text\"\r\n                name=\"caseName\"\r\n                value={formData.caseName}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              {errors.caseName && (\r\n                <span className=\"error-message\">{errors.caseName}</span>\r\n              )}\r\n            </label>\r\n            <label className=\"label\">\r\n              Case type:\r\n              <select\r\n                className=\"field\"\r\n                name=\"caseType\"\r\n                value={formData.caseType}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select a case type\r\n                </option>\r\n                {caseTypes.map((caseType) => (\r\n                  <option key={caseType.id} value={caseType.name}>\r\n                    {caseType.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.caseType && (\r\n                <span className=\"error-message\">{errors.caseType}</span>\r\n              )}\r\n            </label>\r\n          </div>\r\n\r\n          <label className=\"label\">Case witnesses (if applicable):</label>\r\n          <div className=\"form-section-content\">\r\n            <label className=\"label\">\r\n              Witness name\r\n              <input\r\n                className=\"field\"\r\n                name=\"witnessName\"\r\n                type=\"text\"\r\n                value={formData.witnesses.witnessName}\r\n                onChange={(e) => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    witnesses: {\r\n                      ...formData.witnesses,\r\n                      witnessName: e.target.value,\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n            <label className=\"label\">\r\n              Witness contact\r\n              <input\r\n                className=\"field\"\r\n                name=\"witnessContact\"\r\n                type=\"text\"\r\n                value={formData.witnesses.witnessContact}\r\n                onChange={(e) => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    witnesses: {\r\n                      ...formData.witnesses,\r\n                      witnessContact: e.target.value,\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <label className=\"label\">\r\n            Lead Attorney:\r\n            <input\r\n              className={`field fields ${errors.leadAttorney ? \"error\" : \"\"}`}\r\n              type=\"text\"\r\n              name=\"leadAttorney\"\r\n              value={formData.leadAttorney}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            {errors.leadAttorney && (\r\n              <span className=\"error-message\">{errors.leadAttorney}</span>\r\n            )}\r\n          </label>\r\n\r\n          <label className=\"label\">\r\n            Case description:\r\n            <textarea\r\n              className=\"field\"\r\n              name=\"caseDesc\"\r\n              value={formData.caseDesc}\r\n              onChange={handleChange}\r\n            ></textarea>\r\n          </label>\r\n\r\n          <label className=\"label\">Supporting Attorneys (if applicable):</label>\r\n\r\n          <div className=\"form-section-content\">\r\n            <label className=\"label\">\r\n              Attorney name\r\n              <input\r\n                className=\"field\"\r\n                name=\"attorneyName\"\r\n                type=\"text\"\r\n                value={formData.supportingAttornies.attorneyName}\r\n                onChange={(e) => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    supportingAttornies: {\r\n                      ...formData.supportingAttornies,\r\n                      attorneyName: e.target.value,\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n            <label className=\"label\">\r\n              Attorney contact\r\n              <input\r\n                className=\"field\"\r\n                name=\"attorneyContact\"\r\n                type=\"text\"\r\n                value={formData.supportingAttornies.attorneyContact}\r\n                onChange={(e) => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    supportingAttornies: {\r\n                      ...formData.supportingAttornies,\r\n                      attorneyContact: e.target.value,\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <label className=\"label\">\r\n            Jurisdiction:\r\n            <input\r\n              className={`field fields ${errors.jurisdiction ? \"error\" : \"\"}`}\r\n              type=\"text\"\r\n              name=\"jurisdiction\"\r\n              value={formData.jurisdiction}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            {errors.jurisdiction && (\r\n              <span className=\"error-message\">{errors.jurisdiction}</span>\r\n            )}\r\n          </label>\r\n\r\n          <label className=\"label\">\r\n            Court assigned case number (if applicable):\r\n            <input\r\n              className=\"field\"\r\n              type=\"text\"\r\n              name=\"courtNumber\"\r\n              value={formData.courtNumber}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"label\">\r\n            Case notes:\r\n            <textarea\r\n              className=\"field\"\r\n              name=\"caseNotes\"\r\n              value={formData.caseNotes}\r\n              onChange={handleChange}\r\n            ></textarea>\r\n          </label>\r\n\r\n          <button type=\"submit\" className=\"modal-button save\">\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n        <button className=\"cancel-button\" onClick={closeModal}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditCase;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,GAAG,EACHC,SAAS,EACTC,OAAO,EACPC,MAAM,QACD,oBAAoB;AAC3B,OAAO,8CAA8C;AACrD,SAASC,EAAE,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,QAAQA,CAAC;EAAEC,UAAU;EAAEC,MAAM;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,mBAAmB,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,eAAe,EAAE;IACnB,CAAC;IACDC,SAAS,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC;IACnCiB,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBG,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMgC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,OAAO,GAAG/B,GAAG,CAACI,EAAE,EAAE,OAAO,EAAEK,MAAM,CAAC;QACxC,MAAMuB,YAAY,GAAG,MAAM7B,MAAM,CAAC4B,OAAO,CAAC;QAC1C,IAAIC,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE;UAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,eAAA,EAAAC,gBAAA;UACzB,MAAMC,IAAI,GAAGN,YAAY,CAACM,IAAI,CAAC,CAAC;UAChCzB,WAAW,CAAC;YACVC,QAAQ,EAAEwB,IAAI,CAACC,IAAI;YACnBxB,QAAQ,EAAEuB,IAAI,CAACE,IAAI;YACnBxB,YAAY,EAAEsB,IAAI,CAACtB,YAAY;YAC/BC,QAAQ,EAAEqB,IAAI,CAACG,SAAS;YACxBvB,SAAS,EAAEoB,IAAI,CAACI,KAAK;YACrBvB,YAAY,EAAEmB,IAAI,CAACK,aAAa;YAChCC,WAAW,EAAEN,IAAI,CAACO,0BAA0B;YAC5CzB,mBAAmB,EAAE;cACnBC,YAAY,EAAE,EAAAa,qBAAA,GAAAI,IAAI,CAAClB,mBAAmB,cAAAc,qBAAA,uBAAxBA,qBAAA,CAA0BK,IAAI,KAAI,EAAE;cAClDjB,eAAe,EAAE,EAAAa,sBAAA,GAAAG,IAAI,CAAClB,mBAAmB,cAAAe,sBAAA,uBAAxBA,sBAAA,CAA0BW,OAAO,KAAI;YACxD,CAAC;YACDvB,SAAS,EAAE;cACTC,WAAW,EAAE,EAAAY,eAAA,GAAAE,IAAI,CAACf,SAAS,cAAAa,eAAA,uBAAdA,eAAA,CAAgBG,IAAI,KAAI,EAAE;cACvCd,cAAc,EAAE,EAAAY,gBAAA,GAAAC,IAAI,CAACf,SAAS,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBS,OAAO,KAAI;YAC7C;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;QACtC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDlB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACrB,MAAM,CAAC,CAAC;EAEZX,SAAS,CAAC,MAAM;IACd,MAAMmD,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,YAAY,GAAGnD,UAAU,CAACK,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC;QACpD,MAAM+C,aAAa,GAAG,MAAMjD,OAAO,CAACgD,YAAY,CAAC;;QAEjD;QACA,MAAME,aAAa,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAEtD,GAAG,KAAM;UACrDuD,EAAE,EAAEvD,GAAG,CAACuD,EAAE;UACVhB,IAAI,EAAEvC,GAAG,CAACsC,IAAI,CAAC,CAAC,CAACC,IAAI,IAAI,mBAAmB,CAAE;QAChD,CAAC,CAAC,CAAC;QACHV,YAAY,CAACuB,aAAa,CAAC;MAC7B,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAElB,IAAI;MAAEmB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC9C,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAAC2B,IAAI,GAAGmB;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAM9B,OAAO,GAAG/B,GAAG,CAACI,EAAE,EAAE,OAAO,EAAEK,MAAM,CAAC;MACxC;MACA,MAAMqD,WAAW,GAAG;QAClBvB,IAAI,EAAE3B,QAAQ,CAACE,QAAQ;QACvB0B,IAAI,EAAE5B,QAAQ,CAACG,QAAQ;QACvBC,YAAY,EAAEJ,QAAQ,CAACI,YAAY;QACnCyB,SAAS,EAAE7B,QAAQ,CAACK,QAAQ;QAC5ByB,KAAK,EAAE9B,QAAQ,CAACM,SAAS;QACzByB,aAAa,EAAE/B,QAAQ,CAACO,YAAY;QACpC0B,0BAA0B,EAAEjC,QAAQ,CAACgC,WAAW;QAChDxB,mBAAmB,EAAE;UACnBmB,IAAI,EAAE3B,QAAQ,CAACQ,mBAAmB,CAACC,YAAY;UAC/CyB,OAAO,EAAElC,QAAQ,CAACQ,mBAAmB,CAACE;QACxC,CAAC;QACDC,SAAS,EAAE;UACTgB,IAAI,EAAE3B,QAAQ,CAACW,SAAS,CAACC,WAAW;UACpCsB,OAAO,EAAElC,QAAQ,CAACW,SAAS,CAACE;QAC9B;MACF,CAAC;MAED,MAAMxB,SAAS,CAAC8B,OAAO,EAAE+B,WAAW,CAAC;MACrCf,OAAO,CAACgB,GAAG,CAAC,2BAA2B,CAAC;;MAExC;MACAvD,UAAU,CAAC,CAAC;MACZE,YAAY,IAAIA,YAAY,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOsC,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACE1C,OAAA;IAAK0D,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B3D,OAAA;MAAK0D,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B3D,OAAA;QAAA2D,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB/D,OAAA;QAAMgE,QAAQ,EAAEV,YAAa;QAAAK,QAAA,gBAC3B3D,OAAA;UAAK0D,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnC3D,OAAA;YAAO0D,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,YAEvB,eAAA3D,OAAA;cACE0D,SAAS,EAAC,OAAO;cACjBxB,IAAI,EAAC,MAAM;cACXD,IAAI,EAAC,UAAU;cACfmB,KAAK,EAAE9C,QAAQ,CAACE,QAAS;cACzByD,QAAQ,EAAEf,YAAa;cACvBgB,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,EACD3C,MAAM,CAACZ,QAAQ,iBACdR,OAAA;cAAM0D,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEvC,MAAM,CAACZ;YAAQ;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CACxD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACR/D,OAAA;YAAO0D,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,YAEvB,eAAA3D,OAAA;cACE0D,SAAS,EAAC,OAAO;cACjBzB,IAAI,EAAC,UAAU;cACfmB,KAAK,EAAE9C,QAAQ,CAACG,QAAS;cACzBwD,QAAQ,EAAEf,YAAa;cACvBgB,QAAQ;cAAAP,QAAA,gBAER3D,OAAA;gBAAQoD,KAAK,EAAC,EAAE;gBAACe,QAAQ;gBAAAR,QAAA,EAAC;cAE1B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACRzC,SAAS,CAAC0B,GAAG,CAAEvC,QAAQ,iBACtBT,OAAA;gBAA0BoD,KAAK,EAAE3C,QAAQ,CAACwB,IAAK;gBAAA0B,QAAA,EAC5ClD,QAAQ,CAACwB;cAAI,GADHxB,QAAQ,CAACwC,EAAE;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEhB,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,EACR3C,MAAM,CAACX,QAAQ,iBACdT,OAAA;cAAM0D,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEvC,MAAM,CAACX;YAAQ;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CACxD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN/D,OAAA;UAAO0D,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChE/D,OAAA;UAAK0D,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnC3D,OAAA;YAAO0D,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,cAEvB,eAAA3D,OAAA;cACE0D,SAAS,EAAC,OAAO;cACjBzB,IAAI,EAAC,aAAa;cAClBC,IAAI,EAAC,MAAM;cACXkB,KAAK,EAAE9C,QAAQ,CAACW,SAAS,CAACC,WAAY;cACtC+C,QAAQ,EAAGd,CAAC,IAAK;gBACf5C,WAAW,CAAC;kBACV,GAAGD,QAAQ;kBACXW,SAAS,EAAE;oBACT,GAAGX,QAAQ,CAACW,SAAS;oBACrBC,WAAW,EAAEiC,CAAC,CAACE,MAAM,CAACD;kBACxB;gBACF,CAAC,CAAC;cACJ;YAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,eACR/D,OAAA;YAAO0D,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,iBAEvB,eAAA3D,OAAA;cACE0D,SAAS,EAAC,OAAO;cACjBzB,IAAI,EAAC,gBAAgB;cACrBC,IAAI,EAAC,MAAM;cACXkB,KAAK,EAAE9C,QAAQ,CAACW,SAAS,CAACE,cAAe;cACzC8C,QAAQ,EAAGd,CAAC,IAAK;gBACf5C,WAAW,CAAC;kBACV,GAAGD,QAAQ;kBACXW,SAAS,EAAE;oBACT,GAAGX,QAAQ,CAACW,SAAS;oBACrBE,cAAc,EAAEgC,CAAC,CAACE,MAAM,CAACD;kBAC3B;gBACF,CAAC,CAAC;cACJ;YAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN/D,OAAA;UAAO0D,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,gBAEvB,eAAA3D,OAAA;YACE0D,SAAS,EAAE,gBAAgBtC,MAAM,CAACP,YAAY,GAAG,OAAO,GAAG,EAAE,EAAG;YAChEqB,IAAI,EAAC,MAAM;YACXD,IAAI,EAAC,cAAc;YACnBmB,KAAK,EAAE9C,QAAQ,CAACO,YAAa;YAC7BoD,QAAQ,EAAEf,YAAa;YACvBgB,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,EACD3C,MAAM,CAACP,YAAY,iBAClBb,OAAA;YAAM0D,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEvC,MAAM,CAACP;UAAY;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAC5D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAER/D,OAAA;UAAO0D,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,mBAEvB,eAAA3D,OAAA;YACE0D,SAAS,EAAC,OAAO;YACjBzB,IAAI,EAAC,UAAU;YACfmB,KAAK,EAAE9C,QAAQ,CAACK,QAAS;YACzBsD,QAAQ,EAAEf;UAAa;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAER/D,OAAA;UAAO0D,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAEtE/D,OAAA;UAAK0D,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnC3D,OAAA;YAAO0D,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,eAEvB,eAAA3D,OAAA;cACE0D,SAAS,EAAC,OAAO;cACjBzB,IAAI,EAAC,cAAc;cACnBC,IAAI,EAAC,MAAM;cACXkB,KAAK,EAAE9C,QAAQ,CAACQ,mBAAmB,CAACC,YAAa;cACjDkD,QAAQ,EAAGd,CAAC,IAAK;gBACf5C,WAAW,CAAC;kBACV,GAAGD,QAAQ;kBACXQ,mBAAmB,EAAE;oBACnB,GAAGR,QAAQ,CAACQ,mBAAmB;oBAC/BC,YAAY,EAAEoC,CAAC,CAACE,MAAM,CAACD;kBACzB;gBACF,CAAC,CAAC;cACJ;YAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,eACR/D,OAAA;YAAO0D,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,kBAEvB,eAAA3D,OAAA;cACE0D,SAAS,EAAC,OAAO;cACjBzB,IAAI,EAAC,iBAAiB;cACtBC,IAAI,EAAC,MAAM;cACXkB,KAAK,EAAE9C,QAAQ,CAACQ,mBAAmB,CAACE,eAAgB;cACpDiD,QAAQ,EAAGd,CAAC,IAAK;gBACf5C,WAAW,CAAC;kBACV,GAAGD,QAAQ;kBACXQ,mBAAmB,EAAE;oBACnB,GAAGR,QAAQ,CAACQ,mBAAmB;oBAC/BE,eAAe,EAAEmC,CAAC,CAACE,MAAM,CAACD;kBAC5B;gBACF,CAAC,CAAC;cACJ;YAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN/D,OAAA;UAAO0D,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,eAEvB,eAAA3D,OAAA;YACE0D,SAAS,EAAE,gBAAgBtC,MAAM,CAACV,YAAY,GAAG,OAAO,GAAG,EAAE,EAAG;YAChEwB,IAAI,EAAC,MAAM;YACXD,IAAI,EAAC,cAAc;YACnBmB,KAAK,EAAE9C,QAAQ,CAACI,YAAa;YAC7BuD,QAAQ,EAAEf,YAAa;YACvBgB,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,EACD3C,MAAM,CAACV,YAAY,iBAClBV,OAAA;YAAM0D,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEvC,MAAM,CAACV;UAAY;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAC5D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAER/D,OAAA;UAAO0D,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,6CAEvB,eAAA3D,OAAA;YACE0D,SAAS,EAAC,OAAO;YACjBxB,IAAI,EAAC,MAAM;YACXD,IAAI,EAAC,aAAa;YAClBmB,KAAK,EAAE9C,QAAQ,CAACgC,WAAY;YAC5B2B,QAAQ,EAAEf;UAAa;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER/D,OAAA;UAAO0D,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,aAEvB,eAAA3D,OAAA;YACE0D,SAAS,EAAC,OAAO;YACjBzB,IAAI,EAAC,WAAW;YAChBmB,KAAK,EAAE9C,QAAQ,CAACM,SAAU;YAC1BqD,QAAQ,EAAEf;UAAa;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAER/D,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAACwB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACP/D,OAAA;QAAQ0D,SAAS,EAAC,eAAe;QAACU,OAAO,EAAElE,UAAW;QAAAyD,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1D,EAAA,CA9TQJ,QAAQ;AAAAoE,EAAA,GAARpE,QAAQ;AAgUjB,eAAeA,QAAQ;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}